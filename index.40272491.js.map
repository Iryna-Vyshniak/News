{"mappings":"YAAA,IAAMA,EAAY,0BAUX,IAAMC,EAAgB,GAAYC,OAATF,EAAS,wCCVnCG,EAAOC,SAASC,cAAc,eAuC7B,SAASC,EAAoBC,G,IAClCC,EADkCD,EAClCC,OACAC,EAFkCF,EAElCE,MACAC,EAHkCH,EAGlCG,YACAC,EAJkCJ,EAIlCI,WACAC,EALkCL,EAKlCK,YACAC,EANkCN,EAMlCM,IAAGC,EAN+BP,EAOlCQ,OAAUC,EAAEF,EAAFE,GAAIC,EAAIH,EAAJG,KAGd,MAAkB,oHAIOf,OADIe,EAAK,sCAI7Bf,OAHoBQ,EAAYQ,MAAM,KAAKC,KAAK,KAAKC,MAAM,GAAG,GAAI,0BAS7ClB,OANrBS,EACI,uCAA2DT,OAApBS,EAAW,WAAYT,OAAHc,EAAG,2BAC9D,uCAA2Dd,OAVhD,sHAUuC,WAAYA,OAAHc,EAAG,2BACnE,iEAIHd,OADyBO,EAAM,YAERP,OADvBU,EAAc,yBAAqCV,OAAZU,EAAY,QAAQ,GAAG,8BAEjCV,OADNM,UAAU,YAAY,wCACZN,OAAJW,EAAI,qD,CC1DpC,IAAMQ,EAAOjB,SAASC,cAAc,eAC9BiB,EAAOlB,SAASC,cAAc,SAwBpC,SAASkB,EAAQC,GACfC,QAAQC,IAAIF,E,CAvBdF,EAAKK,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,kBFT2BC,EEWfF,EAAEG,cAAcC,SAASC,KAAKC,MAAMC,OFV5CC,EAAa,GAAgClC,OAA7BF,EAAS,sBAAsCE,OAJjD,mCAI4C,OAAWA,OAAN4B,EAAM,2FACpEO,MAAMD,GAAYE,MAAK,SAAAC,G,OAAYA,EAASC,M,KEYhDF,MAAK,SAAA/B,G,IAAGkC,EAAQlC,EAARkC,SACP,GAAwB,IAApBA,EAASC,OACX,MAAM,IAAIC,MAAM,eAElB,OAAOF,EAASG,QACd,SAACC,EAAQC,G,OAAYD,EAASvC,EAAoBwC,E,GAClD,G,IAGHR,MAAK,SAAAO,G,OAAWxB,EAAK0B,UAAYF,C,IACjCG,MAAMzB,GACN0B,SAAQ,W,OAAM3B,EAAK4B,O,IFzBjB,IAAwBpB,EACvBM,C,IE+BRC,MAAMpC,EFvByB,CAC7BkD,QAAS,CACP,YAAc,sCEsBfb,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAA/B,G,IDLA6C,ECKGX,EAAQlC,EAARkC,SAIPhB,QAAQC,IAAIe,GDTRW,EALgB,SAAAC,GACtB,OAAAA,aAAA,EAAAA,EAAOT,QAAO,SAACU,EAAKC,G,OAASD,GAvB7B9C,GADqBD,EAwB6BgD,GAvBlD/C,OACAC,EAAKF,EAALE,MACAC,EAAWH,EAAXG,YACAE,EAAWL,EAAXK,YACAC,EAAGN,EAAHM,KAAGC,EAAAP,EACHQ,QAAUC,GAAIC,EAAIH,EAAJG,KACC,gIAIUf,OADIe,EAAK,sCAIRf,OAHDQ,EAAYQ,MAAM,KAAKC,KAAK,KAAKC,MAAM,GAAG,GAAI,6EAItElB,OADyBO,EAAM,YAERP,OADvBU,EAAc,yBAAqCV,OAAZU,EAAY,QAAQ,GAAG,8BAEjCV,OADNM,UAAU,YAAY,wCACZN,OAAJW,EAAI,uDAjBb,IAAAN,EACrBC,EACAC,EACAC,EACAE,EACAC,EAAGC,EACWG,C,GAkB2C,G,CAI1CuC,CCUCf,GDThBtC,EAAK4C,UAAYK,C,ICWhBJ,MAAMzB,E","sources":["src/app/newsAPI.js","src/app/createMarkup.js","src/index.js"],"sourcesContent":["const BASE_URL = `https://newsapi.org/v2/`;\nconst NEWS_API_KEY = `1572576c777b4bada530e28e03640c11`;\n\n// SEARCH\nexport function fetchSearchAPI(query) {\n  const SEARCH_URL = `${BASE_URL}everything?apiKey=${NEWS_API_KEY}&q=${query}&searchIn=title&from=2023-03-04&to=2023-03-05&language=en&sortBy=popularity&pageSize=24`;\n  return fetch(SEARCH_URL).then(response => response.json());\n}\n\n// ----------------------------------------------------------------\nexport const URL_LIST_NEWS = `${BASE_URL}top-headlines?country=ua&pageSize=20`;\n\n// LIST NEWS\nexport const optionsListNews = {\n  headers: {\n    'X-Api-Key': `1572576c777b4bada530e28e03640c11`,\n  },\n};\n","const list = document.querySelector('[data-list]');\n\n// ----- main page -------------------------------------------------------------------------\n\n// 1\nconst createListItem = ({\n  author,\n  title,\n  publishedAt,\n  description,\n  url,\n  source: { id, name },\n}) => /* html */ `\n<li class=\"news__card--main card--main stacked featured\">\n<div class=\"card__category-data\">\n<span class=\"card__category\">${name}</span>\n<span class=\"card__date\">${publishedAt.split('T').join(' ').slice(0, -4)}</span>\n</div>\n <div class=\"card__content\">\n  <h2 class=\"card__title\">${title}</h2>\n ${description ? `<p class=\"card__desc\">${description}</p>` : ''}\n<p class=\"card__author\">${author ?? 'Anonymous'}</p>\n  <a class=\"card__link\" href=\"${url}\" target=\"_blank\">Read more</a>\n  </div>\n</li>\n`;\n\n// 2\nconst generateContent = array =>\n  array?.reduce((acc, item) => acc + createListItem(item), '');\n\n//3 finally function to generate content\nexport const insertContent = array => {\n  const result = generateContent(array);\n  list.innerHTML = result;\n};\n\n// ----- for search -------------------------------------------------------------------------\n\nexport function createMarkupArticle({\n  author,\n  title,\n  publishedAt,\n  urlToImage,\n  description,\n  url,\n  source: { id, name },\n}) {\n  const defaultImg = `https://ik.imagekit.io/irinavn2011/ukraine-7047830_1920.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1678121370881`;\n  return /* html */ `\n<li class=\"news__card card stacked featured\">\n<div class=\"card__category-data\">\n<span class=\"card__category\">${name}</span>\n<span class=\"card__date\">${publishedAt.split('T').join(' ').slice(0, -4)}</span>\n</div>\n     ${\n       urlToImage\n         ? `<div class=\"card__image\"> <img src=\"${urlToImage}\" alt=\"${id}\" loading=\"lazy\"></div>`\n         : `<div class=\"card__image\"> <img src=\"${defaultImg}\" alt=\"${id}\" loading=\"lazy\"></div>`\n     }\n \n <div class=\"card__content\">\n  <h2 class=\"card__title\">${title}</h2>\n ${description ? `<p class=\"card__desc\">${description}</p>` : ''}\n<p class=\"card__author\">${author ?? 'Anonymous'}</p>\n  <a class=\"card__link\" href=\"${url}\" target=\"_blank\">Read more</a>\n  </div>\n</li>\n`;\n}\n\n//{ <p class=\"news__desc\">${description ? description : ''}</p> } => doesn`t good variant for semantic\n//   <p class=\"news__author\">${author ?? ''}</p>\n","import { format } from 'date-fns';\nimport { uk } from 'date-fns/locale';\n\nimport { fetchSearchAPI, optionsListNews, URL_LIST_NEWS } from './app/newsAPI';\n//import { setImages, setTitleImages } from './app/setImages';\nimport { createMarkupArticle, insertContent } from './app/createMarkup';\n\nconst list = document.querySelector('[data-list]');\nconst form = document.querySelector('#form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const value = e.currentTarget.elements.news.value.trim();\n\n  fetchSearchAPI(value)\n    .then(({ articles }) => {\n      if (articles.length === 0) {\n        throw new Error('No articles');\n      }\n      return articles.reduce(\n        (markup, article) => markup + createMarkupArticle(article),\n        ''\n      );\n    })\n    .then(markup => (list.innerHTML = markup))\n    .catch(onError)\n    .finally(() => form.reset());\n}\n\nfunction onError(err) {\n  console.log(err);\n}\n\nfetch(URL_LIST_NEWS, optionsListNews)\n  .then(response => response.json())\n  .then(({ articles }) => {\n    // if (!ok) {\n    //   throw new Error(`Error fetching`);\n    // }\n    console.log(articles);\n    insertContent(articles);\n  })\n  .catch(onError);\n"],"names":["$a73972c5cad8de13$var$BASE_URL","$a73972c5cad8de13$export$fe8802416a32a1bb","concat","$da7ef5c3d5098246$var$list","document","querySelector","$da7ef5c3d5098246$export$2cc953b8336ab543","param","author","title","publishedAt","urlToImage","description","url","_source","source","id","name","split","join","slice","$b8f9b7833fa37166$var$list","$b8f9b7833fa37166$var$form","$b8f9b7833fa37166$var$onError","err","console","log","addEventListener","e","preventDefault","query","currentTarget","elements","news","value","trim","SEARCH_URL","fetch","then","response","json","articles","length","Error","reduce","markup","article","innerHTML","catch","finally","reset","headers","result","array","acc","item","$da7ef5c3d5098246$var$generateContent"],"version":3,"file":"index.40272491.js.map"}